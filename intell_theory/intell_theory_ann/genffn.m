function [net,tr, performance] = genffn(X,Y,Z)
% Solve an Input-Output Fitting problem with a Neural Network with 10
% hidden nodes.
% Script generated by Neural Fitting app
% Created 05-Nov-2023 02:06:56
% ---------------------------
% X, Y, Z: data generated by genmesh().
% ---------------------------
% This function may takes few minutes.

% x: observations. t:targets.
x = [reshape(X,1,[]);reshape(Y,1,[])];
t = reshape(Z,1,[]);

% Choose a Training Function
% For a list of all training functions type: help nntrain
% 'trainlm' is usually fastest.
% 'trainbr' takes longer but may be better for challenging problems.
% 'trainscg' uses less memory. Suitable in low memory situations.
trainFcn = 'trainlm';  % Levenberg-Marquardt backpropagation.

% Create a Fitting Network
hiddenLayerSize = 10;
net = fitnet(hiddenLayerSize,trainFcn);

% Setup Division of Data for Training, Validation, Testing
net.divideParam.trainRatio = 70/100;
net.divideParam.valRatio = 15/100;
net.divideParam.testRatio = 15/100;

% Train the Network
[net,tr] = train(net,x,t);

% Test the Network
y = net(x);
e = gsubtract(t,y);
performance = perform(net,t,y);

% View the Network
view(net);

% Plots
% Uncomment these lines to enable various plots.
%figure, plotperform(tr)
%figure, plottrainstate(tr)
%figure, ploterrhist(e)
%figure, plotregression(t,y)
%figure, plotfit(net,x,t)
end